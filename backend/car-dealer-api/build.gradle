plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '9.20.0'
}

group = 'br.com.support'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.springdoc:springdoc-openapi:2.4.0"
	}
}

dependencies {
	implementation 'com.bucket4j:bucket4j-core:8.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("junit:junit:4.13.2")
	testImplementation("org.assertj:assertj-core:4.0.0-M1")
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
	testImplementation 'org.mockito:mockito-core:4.8.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
	testImplementation 'org.assertj:assertj-core:3.23.1'
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/support'
	user = 'postgres'
	password = 'hallo32K'
	schemas = ['public']
	locations = ['filesystem:src/main/resources/db/migration']
}

test {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
